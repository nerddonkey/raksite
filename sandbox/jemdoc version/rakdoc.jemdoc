# jemdoc: title{rakdoc}, menu{rak-menu}{rakdoc.html}, addcss{web-mods}, noeqs
#% !TEX TS-program = rakdoc


= Setting Up +jemdoc/rakdoc+ to Run Under +TeXShop+

== Glossary of Terms
~~~
{}{table}{glossary}
Item | Description | Link ||
+jemdoc+ | simplified human readable markup language | @http://jemdoc.jaboc.net/index.html +jemdoc+ homepage@ ||
+TeXShop+ | +TeX+ previewer for Mac OS X | @http://pages.uoregon.edu/koch/texshop/ +TeXShop+ homepage@ ||
+python+ | programming and scripting language | @https://www.python.org python homepage@ ||
+TeXShop+ metadata | metadata for typesetting directives | @http://tex.stackexchange.com/questions/78101/ metadata page@ ||
+css+ | cascading style sheets for web appearance and layout | @http://en.wikipedia.org/wiki/Cascading_Style_Sheets css wikipedia entry@
~~~

== Big Picture

@http://jemdoc.jaboc.net/index.html +jemdoc+@ is simplified human readable markup language that can be used to make webpages and websites.  To generate +html+ one converts a plain-text file written in +jemdoc+ using a @https://www.python.org python@ program called +jemdoc.py+.  I hacked +jemdoc+ to add minor additional functionality and this is called @css-etc/rakdoc.py.zip +rakdoc+@.  With the following I describe how to make life very easy to create webpages and a website using +rakdoc+, or equally well with +jemdoc+. For what it is worth the output viewed in a browser looks very nice given a carefully designed +css+ style sheet. If you don't use OS X then you're out of luck.

The big picture is doing +html+ is pretty brain-dead and tedious.  As a language it is pretty ordinary to say the least. I only ever want to update web pages every so often and working with +html+ (and +css+) is something to avoid.  People realised that it is better to work with a greatly simplified plain-text human readable markup language/short-hand and have this converted to +html+.  This is achieved by running the simplified markup through a program (here +jemdoc+ or +rakdoc+) and the output is +html+, which can be displayed in a browser.  This program is expected to be run through the +Terminal+ (command line) but this is very nerdy and is best avoided.

As an academic I'm use to writing +LaTeX+ technical papers (containing mathematics), where a plain-text source file is compiled or typeset and a PDF file is output and displayed. I focus on content; typeset, and read/admire the final output; then modify content and repeat.  For web-page creation I want the same thing.  In fact I want to use the same program, which is @http://pages.uoregon.edu/koch/texshop/ +TeXShop+@.  If I edit a +LaTeX+ document in +TeXShop+ then when I "+Typeset+" I see a PDF file in the "+Preview+" window (in +TeXShop+).  Now I want to edit a +jemdoc+ document in +TeXShop+ then when I "+Typeset+" I expect to get a +html+ file with my web browser providing the "+Preview+".

== Summary

The scenario is:
. some file +filename.jemdoc+ is double clicked in the +Finder+
. this launches +TeXShop+ and the plain-text +jemdoc+ file opens and can be edited as normal
. the file, even though it is not a +LaTeX+ file, can be "+Typeset+" (command-T) within +TeXShop+
.. an +html+ file called "+filename.html+" is (re-)generated in the subfolder +html/+ (which is created if necessary)
.. the output "+html/filename.html+" is opened automatically in the user's default browser (usually +Safari+), which is the "+Preview+" functionality

Follow this link to see a short screen capture movie of this in action: @media/example-desktop.mov movie@

== Installing the Executable Python Script +rakdoc+ (or Other Program)

Installation is as follows (modelled after @http://jemdoc.jaboc.net/download.html jemdoc install@):

~~~
{}{}
sudo cp rakdoc.py /usr/bin/rakdoc
cd /usr/bin
sudo chmod +x rakdoc
~~~
This puts an executable called +rakdoc+ (which has been stripped of the file extension) in a place where it can be executed from anywhere (it should be in the standard +PATH+).  As a +python+ script +rakdoc+ is normally run from the +Terminal+ app.  To check you have installed it correctly from any directory type the command +rakdoc+ or +rakdoc --show-config+ in +Terminal+.


== Configuring +TeXShop+

+TeXShop+ is designed for +LaTeX+ and most engines to do things related to TeX, LaTeX, XeTeX, etc.  However we can add an engine that runs +rakdoc+ on a +jemdoc+ file that is open in +TeXShop+.  This engine is a bash shell that runs "+rakdoc+" at the command line level for you and does a few other things.  This engine is called @css-etc/rakdoc.engine.zip +rakdoc.engine+@ and one version of it can be seen further down the page.


- To install the engine +rakdoc.engine+ do something like:
~~~
{}{}
sudo cp rakdoc.engine ~/Library/TeXShop/Engines
cd ~/Library/TeXShop/Engines
sudo chmod +x rakdoc.engine
~~~
- Now when +TeXShop+ is (re-)launched you'll find +rakdoc+ available as an alternative command to the usual +LaTeX+ and other built-in commands (in the +Program+ pulldown menu).  Of course if you run it, by invoking +Typeset+ (command-T), on a +LaTeX+ file you'll get nonsense and errors; because the engine is expecting a +rakdoc+ file not a +LaTeX+ file.
- If you open a +jemdoc+ file in +TeXShop+ you'll find you can't typeset it because the +Typeset+ command is dimmed and deactivated.  This is because the file extension +jemdoc+ is not one that +TeXShop+ by default recognizes.  To add +jemdoc+ to the extensions or file types +TeXShop+ recognizes go to +Terminal+ and copy the following (and hit return):
~~~
{}{}
defaults write TeXShop OtherTeXExtensions -array-add "jemdoc"
~~~
- Relaunch +TeXShop+ and open the +jemdoc+ file --- this time the +Typeset+ command should be activated.
- Select the +rakdoc+ command before typesetting and it should all work.  But we can improve things to make life easier.
- Whenever a +jemdoc+ file is opened in +TeXShop+ the default command, usually +LaTeX+, is selected.  Whilst this default can be changed in the preferences it isn't a good idea because most of the time you'll be typesetting +LaTeX+ documents in +TeXShop+.  You can of course each time select the +rakdoc+ command before typesetting but this can be annoying.  The trick is to include @http://tex.stackexchange.com/questions/78101/ metadata@ near the top of your +jemdoc+ file that instructs +TeXShop+ to use the +rakdoc+ command when typesetting --- this is shown in the second line in what is shown below:
~~~
{}{}
# jemdoc: title{Whatever}, menu{myMenu}{index.html}
#% !TEX TS-program = rakdoc
~~~
- This metadata, which concatenates two types of commenting conventions, mercifully works.  The +TeXShop+ metadata begins with +%+ because this is a +LaTeX+ comment (and won't upset the actual +LaTeX+ code).
However, +%+ upsets jemdoc because it isn't interpreted as a comment --- that is why it is prefixed with +\#+, which is the jemdoc Python-style single line comment.
- This finalizes what we need to do in +TeXShop+ and in each +jemdoc+ file.

== Configuring +Finder+

If you double-click a +jemdoc+ file in the +Finder+ it won't automatically open the file in +TeXShop+ but use a default app (usually +TextEdit+).  To have +TeXShop+ used instead as default is simple:

- In +Finder+ do a +Get Info+ (Command-I) on the +jemdoc+ file. Set the pull-down menu "+Open with:+ to +TeXShop+, and hit the +Change All...+ button and select +Continue+ in the dialog box.
#~~~
#{}{raw}
#&#8984;
#~~~

== rakdoc.engine Inner Workings
~~~
{}{}
#!/bin/bash
echo -e "This is rakdoc bash engine, Version 1.2, feel deeply privileged\n"

filename="$1"
htmlname="${filename%.*}.html"
destdir="html/"
CONF="mysite.conf"
imgdir="html/img/"

echo -e "rakdoc Info: Source jemdoc file:" $filename

# run rakdoc
if [ -f $CONF ];
then
	echo -e "rakdoc Info: Using configuration file '$CONF'."
	rakdoc -c $CONF "$filename"
else
	echo -e "rakdoc Warning: No configuration file '$CONF' found."
	rakdoc "$filename"
fi

# create html/ and html/img if they don't exist
mkdir -p $imgdir
mv "$htmlname" $destdir
htmlname=$destdir$htmlname
echo -e "rakdoc Info: Destination html file:" $htmlname

# open the html in the user's default browser
open "$htmlname"

echo -e "\n...rakdoc has left the building."
~~~

#~~~
#{}{raw}
#&#8984;
#~~~
